{"ast":null,"code":"var _jsxFileName = \"/home/nonseodion/Desktop/Codes/Blockchain/Sablier Payment Stream Dapp/my-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useWeb3React } from '@web3-react/core';\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal';\nimport logo from \"./ethereumLogo.png\";\nimport { MAINNET_ID, addresses, abis } from \"@sablier-v1-app/contracts\";\nimport GET_STREAMS from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider(); // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n\n  const sablierContract = new Contract(addresses[MAINNET_ID].sablier, abis.sablier, defaultProvider);\n  const nextStreamId = await sablierContract.nextStreamId();\n  console.log({\n    nextStreamId: nextStreamId.toString()\n  });\n}\n\nfunction WalletButton({\n  provider,\n  loadWeb3Modal\n}) {\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!provider) {\n        loadWeb3Modal();\n      } else {\n        logoutOfWeb3Modal();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !provider ? \"Connect Wallet\" : \"Disconnect Wallet\");\n}\n\nfunction showAddress() {}\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STREAMS);\n  const [provider, setProvider] = useState();\n  const {\n    account,\n    chainId,\n    library\n  } = useWeb3React();\n  console.log(account);\n  /* Open wallet selection modal. */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n  /* If user has loaded a wallet before, load it automatically. */\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  React.useEffect(() => {\n    if (!loading && !error && data && data.streams) {\n      console.log({\n        streams: data.streams\n      });\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WalletButton, {\n    provider: provider,\n    loadWeb3Modal: loadWeb3Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nonseodion/Desktop/Codes/Blockchain/Sablier Payment Stream Dapp/my-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","Contract","Web3Provider","getDefaultProvider","useQuery","useWeb3React","Body","Button","Header","Image","Link","web3Modal","logoutOfWeb3Modal","logo","MAINNET_ID","addresses","abis","GET_STREAMS","readOnChainData","defaultProvider","sablierContract","sablier","nextStreamId","console","log","toString","WalletButton","provider","loadWeb3Modal","showAddress","App","loading","error","data","setProvider","account","chainId","library","newProvider","connect","cachedProvider","streams"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useWeb3React } from '@web3-react/core'\n\nimport { Body, Button, Header, Image, Link } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal'\nimport logo from \"./ethereumLogo.png\";\n\nimport { MAINNET_ID, addresses, abis } from \"@sablier-v1-app/contracts\";\nimport GET_STREAMS from \"./graphql/subgraph\";\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider();\n  // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n  const sablierContract = new Contract(addresses[MAINNET_ID].sablier, abis.sablier, defaultProvider);\n  const nextStreamId = await sablierContract.nextStreamId();\n  console.log({ nextStreamId: nextStreamId.toString() });\n}\n\nfunction WalletButton({ provider, loadWeb3Modal }) {\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {!provider ? \"Connect Wallet\" : \"Disconnect Wallet\"}\n    </Button>\n  );\n}\n\nfunction showAddress(){\n\n}\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_STREAMS);\n  const [provider, setProvider] = useState();\n\n  const { account, chainId, library } = useWeb3React()\n  console.log(account);\n\n  /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n\n  /* If user has loaded a wallet before, load it automatically. */\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.streams) {\n      console.log({ streams: data.streams });\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div>\n      <Header>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} />\n      </Header>\n      <Body>\n\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}