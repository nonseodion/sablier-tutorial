{"ast":null,"code":"var _jsxFileName = \"/home/nonseodion/Desktop/Codes/Blockchain/Sablier Payment Stream Dapp/my-app/packages/react-app/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useWeb3React } from '@web3-react/core';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Body, Button, Header\n/*Image, Link*/\n} from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal';\nimport { MAINNET_ID, addresses, abis } from \"@sablier-v1-app/contracts\";\nimport GET_STREAMS from \"./graphql/subgraph\";\nimport BigNumber from 'bignumber.js';\nBigNumber.config({\n  EXPONENTIAL_AT: 30\n});\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider(); // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n\n  const sablierContract = new Contract(addresses[MAINNET_ID].sablier, abis.sablier, defaultProvider);\n  const nextStreamId = await sablierContract.nextStreamId();\n  console.log({\n    nextStreamId: nextStreamId.toString()\n  });\n}\n\nfunction WalletButton({\n  provider,\n  loadWeb3Modal\n}) {\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      if (!provider) {\n        loadWeb3Modal();\n      } else {\n        logoutOfWeb3Modal();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, !provider ? \"Connect Wallet\" : \"Disconnect Wallet\");\n} // function showAddress(){\n// }\n// createStream = () => {\n//   const sablier = new ethers.Contract(addresses[chainId].sablier, abis.sablier, getProviderOrSigner(library, account))\n// }\n\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STREAMS);\n  const [provider, setProvider] = useState();\n  const [value1, onChange1] = useState(new Date());\n  const [value2, onChange2] = useState(new Date());\n  const web3React = useWeb3React();\n  console.log(web3React);\n  /* Open wallet selection modal. */\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n  /* If user has loaded a wallet before, load it automatically. */\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  React.useEffect(() => {\n    if (!loading && !error && data && data.streams) {\n      console.log({\n        streams: data.streams\n      });\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WalletButton, {\n    provider: provider,\n    loadWeb3Modal: loadWeb3Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Let's Create a Payment Stream\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Wallet Connected: \"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter Deposit Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Recipient Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n    onChange: onChange1,\n    value: value1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Stop Time\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n    onChange: onChange2,\n    value: value2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Create Stream\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nonseodion/Desktop/Codes/Blockchain/Sablier Payment Stream Dapp/my-app/packages/react-app/src/App.js"],"names":["React","useCallback","useEffect","useState","Contract","Web3Provider","getDefaultProvider","useQuery","useWeb3React","DateTimePicker","Body","Button","Header","web3Modal","logoutOfWeb3Modal","MAINNET_ID","addresses","abis","GET_STREAMS","BigNumber","config","EXPONENTIAL_AT","readOnChainData","defaultProvider","sablierContract","sablier","nextStreamId","console","log","toString","WalletButton","provider","loadWeb3Modal","App","loading","error","data","setProvider","value1","onChange1","Date","value2","onChange2","web3React","newProvider","connect","cachedProvider","streams"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { Web3Provider, getDefaultProvider } from \"@ethersproject/providers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useWeb3React } from '@web3-react/core';\nimport DateTimePicker from 'react-datetime-picker';\n\nimport { Body, Button, Header, /*Image, Link*/ } from \"./components\";\nimport { web3Modal, logoutOfWeb3Modal } from './utils/web3Modal'\n\nimport { MAINNET_ID, addresses, abis } from \"@sablier-v1-app/contracts\";\nimport GET_STREAMS from \"./graphql/subgraph\";\n\nimport BigNumber from 'bignumber.js';\nBigNumber.config({ EXPONENTIAL_AT: 30 });\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider();\n  // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n  const sablierContract = new Contract(addresses[MAINNET_ID].sablier, abis.sablier, defaultProvider);\n  const nextStreamId = await sablierContract.nextStreamId();\n  console.log({ nextStreamId: nextStreamId.toString() });\n}\n\nfunction WalletButton({ provider, loadWeb3Modal }) {\n  return (\n    <Button\n      onClick={() => {\n        if (!provider) {\n          loadWeb3Modal();\n        } else {\n          logoutOfWeb3Modal();\n        }\n      }}\n    >\n      {!provider ? \"Connect Wallet\" : \"Disconnect Wallet\"}\n    </Button>\n  );\n}\n\n// function showAddress(){\n\n// }\n\n// createStream = () => {\n//   const sablier = new ethers.Contract(addresses[chainId].sablier, abis.sablier, getProviderOrSigner(library, account))\n// }\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_STREAMS);\n  const [provider, setProvider] = useState();\n  const [value1, onChange1] = useState(new Date());\n  const [value2, onChange2] = useState(new Date());\n\n  const web3React = useWeb3React();\n  console.log(web3React);\n\n  /* Open wallet selection modal. */\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, []);\n\n  /* If user has loaded a wallet before, load it automatically. */\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.streams) {\n      console.log({ streams: data.streams });\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div>\n      <Header>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} />\n      </Header>\n      <Body>\n        <h1>Let's Create a Payment Stream</h1>\n        <p>Wallet Connected: </p>\n        <input placeholder=\"Enter Deposit Amount\"/>\n        <input placeholder=\"Recipient Address\"/>\n        <label for=\"start\">Start Time</label>\n        <DateTimePicker \n          onChange={onChange1} \n          value={value1}/>\n        <label for=\"stop\">Stop Time</label>\n        <DateTimePicker \n          onChange={onChange2} \n          value={value2}/>\n        <Button>\n          Create Stream\n        </Button>\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}